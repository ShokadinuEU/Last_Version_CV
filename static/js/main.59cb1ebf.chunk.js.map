{"version":3,"sources":["components/main/TopMenu.js","components/main/LeftName.js","components/main/HeaderText.js","components/main/Header.js","components/menu/SocialIcons.js","components/menu/MenuList.js","components/menu/LeftName.js","components/menu/TopNav.js","components/menu/Menu.js","App.js","serviceWorker.js","index.js"],"names":["TopMenu","props","toggleClass","react_default","a","createElement","className","onClick","LeftName","HeaderText","Index","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currentState","state","toggle","setState","document","getElementById","classList","main_TopMenu","main_LeftName","Component","SocialIcons","href","target","rel","src","alt","MenuList","mouseEnter","querySelector","add","mouseLeave","remove","onMouseEnter","onMouseLeave","menu_SocialIcons","toggleMenu","Menu","id","menu_MenuList","menu_LeftName","TopNav","App","Header","menu_Menu","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59cb1ebf.chunk.js","sourcesContent":["import React from 'react'\r\nimport './header.scss'\r\n\r\nfunction TopMenu(props) {\r\n  const { toggleClass } = props\r\n  return (\r\n    <div>\r\n      <div className=\"right-menu\">\r\n          <div className=\"group-1\">\r\n            <div className=\"rectangle\">\r\n              <div onClick={toggleClass} className=\"start-project\">start project</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"group\"  >\r\n            <div className=\"path-1\"\r\n                 onClick={toggleClass}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopMenu\r\n","import React from 'react'\r\nimport './header.scss'\r\n\r\nfunction LeftName() {\r\n  return (\r\n    <div>\r\n      <div className=\"left-name\">\r\n        <p className=\"left-name-text\">Timotei Dumitru</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftName\r\n","import React from 'react'\r\nimport './header.scss'\r\n\r\nexport default function HeaderText() {\r\n  return (\r\n    <div>\r\n      <div className=\"header-text\">\r\n        Hello,<br />\r\n        i'm Timotei<br />\r\n        a Junior<br />\r\n        Front-End<br />\r\n        Developer\r\n      <span className=\"based-in-london\">based in London</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport TopMenu from './TopMenu'\r\nimport LeftName from './LeftName'\r\nimport HeaderText from './HeaderText'\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        toggle: false,\r\n    }\r\n  }\r\n  toggleClass = () => {\r\n    const currentState = this.state.toggle;\r\n    this.setState({ toggle: !currentState })\r\n    let classToggle = document.getElementById(\"toggle-menu-button\");\r\n    classToggle.classList.toggle(\"show\")\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TopMenu toggleClass={this.toggleClass}/>\r\n        <LeftName />\r\n        <HeaderText />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n","import React from 'react'\r\nimport './menu.scss'\r\n\r\nfunction SocialIcons() {\r\n  return (\r\n    <div className=\"social-section\">\r\n      <ul className=\"social-icons\">\r\n        <li className=\"social-icon\"><a href=\"https://www.linkedin.com/in/timotei-dumitru-1494ab160/\" target=\"blank\" rel=\"noopener noreferrer\"><img src=\"./images/social-icons/linkedin.png\" alt=\"LinkedIn\"/></a></li>\r\n        <li className=\"social-icon\"><a href=\"https://github.com/ShokadinuEU\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"./images/social-icons/github.png\" alt=\"Github\"/></a></li>\r\n        <li className=\"social-icon\"> <a href=\"https://www.facebook.com/dumitru.timy\" target=\"blank\" rel=\"noopener noreferrer\"><img src=\"./images/social-icons/facebook.png\" alt=\"Facebook\"/></a></li>\r\n        <li className=\"social-icon\"><a href=\"https://plus.google.com/u/0/112277218680998369339\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"./images/social-icons/googlePlus.png\" alt=\"GooglePlus\"/></a></li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SocialIcons\r\n","import React, { Component } from 'react'\r\nimport './menu.scss'\r\nimport SocialIcons from './SocialIcons';\r\n\r\nclass MenuList extends Component {\r\n\r\n  mouseEnter = () => {\r\n    const icons = document.querySelector(\".social-icons\")\r\n    icons.classList.add(\"fade-element\")\r\n  }\r\n  mouseLeave = () => {\r\n    const icons = document.querySelector(\".social-icons\")\r\n    icons.classList.remove(\"fade-element\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"menu-list\">\r\n          <li onMouseEnter={this.mouseEnter}\r\n              onMouseLeave={this.mouseLeave} className=\"menu-item\">Work</li>\r\n          <li onMouseEnter={this.mouseEnter}\r\n              onMouseLeave={this.mouseLeave} className=\"menu-item\">About</li>\r\n          <li onMouseEnter={this.mouseEnter}\r\n              onMouseLeave={this.mouseLeave} className=\"menu-item\">Resume</li>\r\n          <li onMouseEnter={this.mouseEnter}\r\n              onMouseLeave={this.mouseLeave} className=\"menu-item\">Contact</li>\r\n          <SocialIcons />\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MenuList\r\n","import React from 'react'\r\nimport './menu.scss'\r\n\r\nfunction LeftName() {\r\n  return (\r\n    <div>\r\n      <div className=\"left-name-menu\">\r\n        <p className=\"left-name-menu-text\">Timotei Dumitru</p>\r\n      </div>\r\n      <span className=\"left-name-email\">dumitru.timy@gmail.com</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LeftName","import React from 'react'\r\nimport './menu.scss'\r\n\r\nfunction TopMenu(props) {\r\n  const { toggleMenu } = props\r\n  return (\r\n    <div>\r\n      <div className=\"right-nav\">\r\n          <div className=\"nav-button\">\r\n            <div className=\"button-wrapper\">\r\n              <div onClick={toggleMenu} className=\"button-text\">main page</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"nav-activator\">\r\n            <div className=\"path-2\" onClick={toggleMenu}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TopMenu\r\n","import React, { Component } from 'react'\r\nimport './menu.scss'\r\nimport MenuList from './MenuList'\r\nimport LeftName from './LeftName'\r\nimport TopNav from './TopNav'\r\n\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        toggle: false,\r\n    }\r\n  }\r\n  toggleMenu = () => {\r\n    const currentState = this.state.toggle;\r\n    this.setState({ toggle: !currentState })\r\n    let classToggle = document.getElementById(\"toggle-menu-button\");\r\n    classToggle.classList.toggle(\"show\")\r\n  }\r\n    render() {\r\n      return (\r\n      <div>\r\n        <div id=\"toggle-menu-button\" className=\"menu-wrapper\">\r\n          <MenuList />\r\n          <LeftName />\r\n          <TopNav toggleMenu={this.toggleMenu} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default  Menu\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from './components/main/Header';\r\nimport Menu from './components/menu/Menu';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Menu />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}